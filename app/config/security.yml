# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        PDS\UserBundle\Entity\Users: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        #ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            id: fos_user.user_provider.username
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|(member/(css|images|js)))/
            security: false
        secured_area:
            pattern: ^/
            anonymous: ~
            form_login:
                provider: main
                login_path: 'fos_user_security_login'
                check_path: 'fos_user_security_check'
                use_forward: false
                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          _target_path
                use_referer:                    false
            logout:
                path: 'fos_user_security_logout'

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/js, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/css, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/, role: ROLE_USER, requires_channel: http }
